@page "/application-user-overview/{UserId}"
@inject HttpClient Http

@if (applicationUser == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <h2>Course: @applicationUser.Course.Name</h2>
        <p>Course Description: @applicationUser.Course.Description</p>
        <p>Start Date: @applicationUser.Course.StartDate.ToShortDateString()</p>
        <h3>Modules:</h3>
        @foreach (var module in applicationUser.Modules)
        {
            <p>@module.Name - @module.Description</p>
        }
        <h3>Course Participants:</h3>
        @foreach (var participant in applicationUser.CourseParticipants)
        {
            <p>@participant.FullName - @participant.Email</p>
        }
    </div>
}

@code {
    [Parameter]
    public string UserId { get; set; }

    private ApplicationUserDTO applicationUser;

    protected override async Task OnInitializedAsync()
    {
        applicationUser = await Http.GetFromJsonAsync<ApplicationUserDTO>($"api/ApplicationUser/{UserId}");
    }

    public class ApplicationUserDTO
    {
        public Guid Id { get; set; }
        public string FullName { get; set; }
        public string Email { get; set; }
        public CourseDTO Course { get; set; }
        public List<ApplicationUserDTO> CourseParticipants { get; set; }
        public List<ModuleDTO> Modules { get; set; }
    }

    public class CourseDTO
    {
        public Guid Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public DateTime StartDate { get; set; }
        // Other properties as needed
    }

    public class ModuleDTO
    {
        public Guid Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        // Other properties as needed
    }
}